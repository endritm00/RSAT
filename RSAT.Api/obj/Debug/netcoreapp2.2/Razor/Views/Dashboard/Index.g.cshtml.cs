#pragma checksum "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/Dashboard/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1566479104dd12f975373a2f5e987c494de7604c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/_ViewImports.cshtml"
using RSAT.Api;

#line default
#line hidden
#line 2 "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/_ViewImports.cshtml"
using RSAT.Api.Data.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1566479104dd12f975373a2f5e987c494de7604c", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d7efab58f19600ad899d51e353bef788200d6bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RSAT.Api.Data.ViewModels.HomeViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sorttable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/Dashboard/Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
            BeginContext(88, 9789, true);
            WriteLiteral(@"
<div class=""row"">
    <meta http-equiv=""refresh"" content=""600"">
    <div class=""col-lg-12"">
        <div class=""wrapper wrapper-content animated fadeInRight"">

            <div class=""ibox-content m-b-sm border-bottom"">

                <div class=""p-xs"">
                    <div class=""pull-left m-r-md"">

                    </div>
                    <style type=""text/css"">

                        .tg {
                            border-collapse: collapse;
                            border-spacing: 0;
                        }

                            .tg td {
                                font-family: Arial, sans-serif;
                                font-size: 14px;
                                padding: 16px 20px;
                                border-style: solid;
                                border-width: 1px;
                                overflow: hidden;
                                word-break: normal;
                                border-color: bla");
            WriteLiteral(@"ck;
                            }

                            .tg th {
                                font-family: Arial, sans-serif;
                                font-size: 14px;
                                font-weight: normal;
                                padding: 16px 20px;
                                border-style: solid;
                                border-width: 1px;
                                overflow: hidden;
                                word-break: normal;
                                border-color: black;
                            }

                            .tg .tg-oae7 {
                                font-size: 11px;
                                background-color: #fcf9f9;
                                border-color: inherit;
                                text-align: left;
                            }

                            .tg .tg-oae8 {
                                background-color: #1ab394;
                               ");
            WriteLiteral(@" border-color: inherit;
                                color: #FFFFFF;
                                font-size: 11px;
                            }

                            .tg .tg-htpk {
                                font-size: 11px;
                                background-color: #ffffff;
                                border-color: inherit;
                                text-align: left;
                                vertical-align: top
                            }

                        .asc:after {
                            content: ' \25B2';
                        }

                        .desc:after {
                            content: ' \25BC';
                        }

                        .dropbtn {
                            background-color: #1ab394;
                            color: white;
                            padding: 10px 12px;
                            font-size: 15px;
                            border: 8px;
                 ");
            WriteLiteral(@"       }

                        .dropdown {
                            position: initial;
                            display: inline-block;
                        }

                        .dropdown-content {
                            display: none;
                            position: absolute;
                            background-color: #f1f1f1;
                            min-width: 160px;
                            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
                            z-index: 1;
                        }

                            .dropdown-content a {
                                color: black;
                                padding: 12px 16px;
                                text-decoration: none;
                                display: block;
                            }

                                .dropdown-content a:hover {
                                    background-color: #ddd;
                                }

            ");
            WriteLiteral(@"            .dropdown:hover .dropdown-content {
                            display: block;
                        }

                        .dropdown:hover .dropbtn {
                            background-color: #3e8e41;
                        }
                    </style>
                    <script>
                        function myFunction() {
                            var input, filter, table, tr, td, i;
                            input = document.getElementById(""myInput"");
                            filter = input.value.toUpperCase();
                            table = document.getElementById(""myTable"");
                            tr = table.getElementsByTagName(""tr"");
                            for (i = 0; i < tr.length; i++) {
                                td = tr[i].getElementsByTagName(""th"")[0];
                                if (td) {
                                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                                       ");
            WriteLiteral(@" tr[i].style.display = """";
                                    } else {
                                        tr[i].style.display = ""none"";
                                    }
                                }
                            }
                        }


                    </script>
                    <script>
                        function sortStatus() {
                            var table, rows, switching, i, x, y, shouldSwitch;
                            table = document.getElementById(""myTable"");
                            switching = true;

                            while (switching) {

                                switching = false;
                                rows = table.rows;

                                for (i = 1; i < (rows.length - 1); i++) {

                                    shouldSwitch = false;

                                    x = rows[i].getElementsByTagName(""th"")[2];
                                    y = rows[i + 1].getE");
            WriteLiteral(@"lementsByTagName(""th"")[2];

                                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {


                                        shouldSwitch = true;
                                        break;
                                    }
                                }
                                if (shouldSwitch) {

                                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                                    switching = true;
                                }
                            }
                        }
                        function sortStatusDesc() {

                            var table, rows, switching, i, x, y, shouldSwitch;
                            table = document.getElementById(""myTable"");
                            switching = true;

                            while (switching) {

                                switching = false;
                                rows = table.rows;
");
            WriteLiteral(@"
                                for (i = 1; i < (rows.length - 1); i++) {

                                    shouldSwitch = false;

                                    x = rows[i].getElementsByTagName(""th"")[2];
                                    y = rows[i + 1].getElementsByTagName(""th"")[2];

                                    if (x.innerHTML.indexOf('Dalje') > y.innerHTML.indexOf('Dalje')) {

                                        shouldSwitch = true;
                                        break;
                                    }
                                }
                                if (shouldSwitch) {

                                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                                    switching = true;
                                }
                            }
                        }
                        function sortStatusT() {

                            var table, rows, switching, i, x, y, shouldSwitch;
  ");
            WriteLiteral(@"                          table = document.getElementById(""myTable"");
                            switching = true;

                            while (switching) {

                                switching = false;
                                rows = table.rows;

                                for (i = 1; i < (rows.length - 1); i++) {

                                    shouldSwitch = false;

                                    x = rows[i].getElementsByTagName(""th"")[2];
                                    y = rows[i + 1].getElementsByTagName(""th"")[2];

                                    if (x.innerHTML.indexOf(""Takim / Meeting"") < y.innerHTML.indexOf(""Takim / Meeting"")) {

                                        shouldSwitch = true;
                                        break;
                                    }
                                }
                                if (shouldSwitch) {

                                    rows[i].parentNode.insertBefore(rows[i + 1");
            WriteLiteral(@"], rows[i]);
                                    switching = true;
                                }
                            }
                        }

                    </script>
                    <button class=""btn btn-success fa fa-refresh"" onClick=""window.location.reload()""> Refresh</button>
                    <br />
                    <br />
                    <input type=""text"" class=""form-control"" id=""myInput"" onkeyup=""myFunction()"" placeholder=""Search for names.."" title=""Type in a name"">
                    <br />
                    ");
            EndContext();
            BeginContext(9877, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1566479104dd12f975373a2f5e987c494de7604c13875", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9918, 4424, true);
            WriteLiteral(@"

                    <!--Import jQuery before export.js-->
                    <script type=""text/javascript"" src=""https://code.jquery.com/jquery-2.1.1.min.js""></script>

                    <!--Data Table-->
                    <script type=""text/javascript"" src="" https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js""></script>
                    <script type=""text/javascript"" src="" https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js""></script>
                    <script type=""text/javascript"" src="" https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js""></script>

                    <!--Export table buttons-->
                    <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js""></script>
                    <script type=""text/javascript"" src=""https://cdn.rawgit.com/bpampuch/pdfmake/0.1.24/build/pdfmake.min.js""></script>
                    <script type=""text/javascript"" src=""https://cdn.rawgit.com/bpampuch/pdfm");
            WriteLiteral(@"ake/0.1.24/build/vfs_fonts.js""></script>
                    <script type=""text/javascript"" src=""https://cdn.datatables.net/buttons/1.2.4/js/buttons.html5.min.js""></script>
                    <script type=""text/javascript"" src=""https://cdn.datatables.net/buttons/1.2.1/js/buttons.print.min.js""></script>

                    <!--Export table button CSS-->
                    <link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css"">
                    <link rel=""stylesheet"" href=""https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css"">
                    <div class=""table-responsive"">

                        <table id=""myTable2"" class=""display ui-datepicker-row-break"" style=""width:100%"">
                            <thead>
                                <tr>
                                    <th>User Id</th>
                                    <th>Name</th>
                                    <th>Department</th>
                        ");
            WriteLiteral(@"            <th>Status</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>

                <div class=""table-responsive"">
                    <table id=""myTable1"" class=""display ui-datepicker-row-break"" style=""width:100%"">
                        <thead>
                            <tr>
                                <th>User Id</th>
                                <th>Name</th>
                                <th>Working Hours</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>



    <!--Import jQuery before export.js-->
    <script type=""text/javascript"" src=""https://code.jquery.com/jquery-2.1.1.min.js""></script>

    <!--Data Table-->
    <script type=""text/javascript"" src="" https://cdn.datatables.net/1.10");
            WriteLiteral(@".13/js/jquery.dataTables.min.js""></script>
    <script type=""text/javascript"" src="" https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js""></script>
    <script type=""text/javascript"" src="" https://cdn.datatables.net/plug-ins/1.10.19/api/sum().js""></script>

    <!--Export table buttons-->
    <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.rawgit.com/bpampuch/pdfmake/0.1.24/build/pdfmake.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.rawgit.com/bpampuch/pdfmake/0.1.24/build/vfs_fonts.js""></script>
    <script type=""text/javascript"" src=""https://cdn.datatables.net/buttons/1.2.4/js/buttons.html5.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.datatables.net/buttons/1.2.1/js/buttons.print.min.js""></script>

    <!--Export table button CSS-->
    <link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.13/css/jquery.dataTab");
            WriteLiteral(@"les.min.css"">
    <link rel=""stylesheet"" href=""https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css"">

    <script type=""text/javascript"">
        $(document).ready(function () {
            $.noConflict();

            $('#myTable1').DataTable({
                ""ajax"": {
                    ""url"":""");
            EndContext();
            BeginContext(14343, 39, false);
#line 318 "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/Dashboard/Index.cshtml"
                      Write(Url.Action("WorkingHours", "Dashboard"));

#line default
#line hidden
            EndContext();
            BeginContext(14382, 923, true);
            WriteLiteral(@""",
                    ""type"": ""POST"",
                    ""datatype"": ""application/json"",

                },

                ""serverSide"" : ""true"",
                ""processing"": ""true"",
                ""columns"": [
                    { ""data"": ""UserId"", ""name"": ""UserI"", ""autoWidth"": true },
                    { ""data"": ""Name"", ""name"": ""Name"", ""autoWidth"": true },
                    { ""data"": ""WorkingHours"", ""name"": ""WorkingHours"", ""autoWidth"": true },
                    { ""data"": ""Date"", ""name"": ""Date"", ""autoWidth"": true }

                ],

                dom: 'Bfrtip',
                buttons: [
                    'copy', 'pdf', 'csv', 'print', 'excel'
                ]
            });
                });




    </script>
    <script>
        $(document).ready(function () {
            $(""#myTable2"").DataTable({
                ""ajax"": {
                    ""url"": """);
            EndContext();
            BeginContext(15306, 32, false);
#line 349 "/Users/Endrit/Desktop/RSAT/wetransfer-12416b/RSAT/RSAT.Api/Views/Dashboard/Index.cshtml"
                       Write(Url.Action("Status","Dashboard"));

#line default
#line hidden
            EndContext();
            BeginContext(15338, 614, true);
            WriteLiteral(@""",
                    ""type"": ""POST"",
                    ""data"": ""json"",
                    ""contentType"": ""application/json"",
                    
                },

                ""processing"": ""true"",
                ""columns"": [
                    { ""data"": ""Id"", ""name"": ""Id"" },
                    { ""data"": ""Name"", ""name"": ""Name"" },
                    { ""data"": ""Department"", ""name"": ""Department"" },
                    { ""data"": ""ActualCheckinStatuse.CheckStatus"", ""name"": ""ActualCheckinStatuse.CheckStatus""},

                ],
            });
             });
    </script>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RSAT.Api.Data.ViewModels.HomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
